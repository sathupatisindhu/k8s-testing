name: Checkbox Workflow

on:
  workflow_dispatch:
    inputs:
      environments:
        description: Select environment
        required: true
        default: dev
        type: choice
        options:
          - dev
          - qa
          - prod
      checkbox_1:
        description: Terraform Nodes
        required: true
        default: 'false'
      checkbox_2:
        description: Kops Installation
        required: true
        default: 'false'
      checkbox_3:
        description: EFK Installation
        required: false
        default: 'false'
      checkbox_4:
        description: Monitoring Installation
        required: false
        default: 'false'

jobs:
  run_workflow:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.9
      - name: Run workflow based on checkboxes and run commands
        run: |
          if [ "${{ github.event.inputs.checkbox_1 }}" == "true" ]; then
            echo "creating nodes"
            # Your commands for Checkbox 1 go here
            ls -lrt
            cd terraform
            cd dev
            ls -lrt
            terraform --version
            terraform init
            terraform validate
            terraform plan
            terraform apply --auto-approve
          fi
      - name: Run workflow for kops installation
        run: |
          if [ "${{ github.event.inputs.checkbox_2 }}" == "true" ]; then
            echo "installation for Kops"
            # Your command for Checkbox 2 goes here
          fi
      - name: Set AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
      - name: Install kops and AWS CLI
        run: |
          if [ "${{ github.event.inputs.checkbox_2 }}" == "true" ]; then
            wget https://github.com/kubernetes/kops/releases/download/v1.28.1/kops-linux-amd64
            sudo mv kops-linux-amd64 /usr/local/bin/kops
            sudo chmod +x /usr/local/bin/kops 
            which kops 
            kops version
            aws --version
            aws configure set default.region us-east-1
            aws ec2 describe-instance-types --instance-types t2.medium  # Fetch information about the instance type to set the correct endpoint
            aws s3api create-bucket --bucket k8s-bucket-sindhu --region us-east-1
            aws s3 ls
            aws s3api put-bucket-versioning --bucket k8s-bucket-sindhu --region us-east-1 --versioning Status=Enabled
            export KOPS_STATE_STORE=s3://k8s-bucket-sindhu
            export KOPS_CLUSTER_NAME=sindhu-cluster.sarathkumar.xyz
            #kops create cluster --name=${KOPS_CLUSTER_NAME} --zones=us-east-1a --master-size=t2.large --node-size=t2.medium --kubernetes-version=1.27.8 --dns private
            #kops create cluster --name sindhu-cluster.sarathkumar.xyz --zones us-east-1a --master-size t2.medium --node-size t2.micro --kubernetes-version 1.27.8
            #kops create cluster --name=sindhu-cluster.sarathkumar.xyz --zones=us-east-1a --master-size=t2.large --node-size=t2.medium --kubernetes-version=1.27.8 --dns private
            kops get cluster
            kops update cluster --name ${KOPS_CLUSTER_NAME} --yes
            #kops update cluster --name sindhu-cluster.sarathkumar.xyz --yes
            kops validate cluster --name sindhu-cluster.sarathkumar.xyz
            kops get cluster
            kops export kubecfg --admin
            kops validate cluster --name sindhu-cluster.sarathkumar.xyz
            kops get cluster

          fi
          if [ "${{ github.event.inputs.checkbox_3 }}" == "true" ]; then
            echo "installation for EFK"
            # Your command for Checkbox 3 goes here
          fi
          if [ "${{ github.event.inputs.checkbox_4 }}" == "true" ]; then
            echo "installation for monitoring"
            # Your command for Checkbox 4 goes here
          fi
